{"ast":null,"code":"var _jsxFileName = \"/Users/uguryuce/Documents/GitHub/reactJS-document/reactCourse/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navi from \"./Navi\";\nimport CategoryList from \"./CategoryList\";\nimport ProductList from \"./ProductList\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport alertify from \"alertifyjs\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport CartList from \"./CartList\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCategory: \"\",\n      products: [],\n      cart: []\n    };\n\n    this.changeCategory = category => {\n      this.setState({\n        currentCategory: category.categoryName\n      });\n      this.getProducts(category.id);\n    };\n\n    this.getProducts = categoryId => {\n      let url = \"http://localhost:3000/products\";\n\n      if (categoryId) {\n        url += \"?categoryId=\" + categoryId;\n      }\n\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        products: data\n      }));\n    };\n\n    this.addToCart = product => {\n      let newCart = this.state.cart;\n      var addedItem = newCart.find(c => c.product.id === product.id);\n\n      if (addedItem) {\n        addedItem.quantity += 1;\n      } else {\n        newCart.push({\n          product: product,\n          quantity: 1\n        });\n      }\n\n      this.setState({\n        cart: newCart\n      });\n      alertify.success(product.productName + \"added to cart!\", 2);\n    };\n\n    this.removeFromCart = product => {\n      let newCart = this.state.cart.filter(c => c.product.id !== product.id);\n      this.setState({\n        cart: newCart\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  render() {\n    let categoryInfo = {\n      title: \"CategoryList\"\n    };\n    let productInfo = {\n      title: \"ProductList\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Navi, {\n      removeFromCart: this.removeFromCart,\n      cart: this.state.cart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CategoryList, {\n      currentCategory: this.state.currentCategory,\n      changeCategory: this.changeCategory,\n      info: categoryInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(ProductList, Object.assign({}, props, {\n        currentCategory: this.state.currentCategory,\n        products: this.state.products,\n        addToCart: this.addToCart,\n        info: productInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(ProductList, Object.assign({}, props, {\n        currentCategory: this.state.currentCategory,\n        products: this.state.products,\n        addToCart: this.addToCart,\n        info: productInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/uguryuce/Documents/GitHub/reactJS-document/reactCourse/src/App.js"],"names":["React","Component","Navi","CategoryList","ProductList","Container","Row","Col","alertify","Route","Switch","NotFound","CartList","App","state","currentCategory","products","cart","changeCategory","category","setState","categoryName","getProducts","id","categoryId","url","fetch","then","response","json","data","addToCart","product","newCart","addedItem","find","c","quantity","push","success","productName","removeFromCart","filter","componentDidMount","render","categoryInfo","title","productInfo","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navi from \"./Navi\";\nimport CategoryList from \"./CategoryList\";\nimport ProductList from \"./ProductList\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport alertify from \"alertifyjs\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport CartList from \"./CartList\";\n\nexport default class App extends Component {\n  state = { currentCategory: \"\", products: [], cart: [] };\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  changeCategory = category => {\n    this.setState({ currentCategory: category.categoryName });\n    this.getProducts(category.id);\n  };\n\n  getProducts = categoryId => {\n    let url = \"http://localhost:3000/products\";\n\n    if (categoryId) {\n      url += \"?categoryId=\" + categoryId;\n    }\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ products: data }));\n  };\n\n  addToCart = product => {\n    let newCart = this.state.cart;\n    var addedItem = newCart.find(c => c.product.id === product.id);\n    if (addedItem) {\n      addedItem.quantity += 1;\n    } else {\n      newCart.push({ product: product, quantity: 1 });\n    }\n\n    this.setState({ cart: newCart });\n    alertify.success(product.productName + \"added to cart!\", 2);\n  };\n\n  removeFromCart = product => {\n    let newCart = this.state.cart.filter(c => c.product.id !== product.id);\n    this.setState({ cart: newCart });\n  };\n\n  render() {\n    let categoryInfo = { title: \"CategoryList\" };\n    let productInfo = { title: \"ProductList\" };\n    return (\n      <div className=\"App\">\n        <Container>\n          <Navi removeFromCart={this.removeFromCart} cart={this.state.cart} />\n\n          <Row>\n            <Col xs=\"3\">\n              <CategoryList\n                currentCategory={this.state.currentCategory}\n                changeCategory={this.changeCategory}\n                info={categoryInfo}\n              />\n            </Col>\n\n            <Col xs=\"9\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => (\n                    <ProductList\n                    {...props}\n                      currentCategory={this.state.currentCategory}\n                      products={this.state.products}\n                      addToCart={this.addToCart}\n                      info={productInfo}\n                    />\n                  )}\n                ></Route>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => (\n                    <ProductList\n                    {...props}\n                      currentCategory={this.state.currentCategory}\n                      products={this.state.products}\n                      addToCart={this.addToCart}\n                      info={productInfo}\n                    />\n                  )}\n                ></Route>\n                <Route component={NotFound}></Route>\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}