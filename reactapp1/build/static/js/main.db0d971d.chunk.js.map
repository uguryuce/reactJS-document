{"version":3,"sources":["layout/Navbar.js","context.js","components/User.js","forms/AddUser.js","forms/UpdateUser.js","components/Users.js","pages/NotFound.js","pages/Contribute.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","title","className","href","to","defaultProps","UserContext","React","createContext","reducer","state","action","type","users","filter","user","payload","id","map","UserProvider","dispatch","setState","componentDidMount","a","async","axios","get","response","data","Provider","value","this","props","children","Component","UserConsumer","Consumer","User","onClickEvet","e","isVisible","onDeleteUser","delete","bind","console","log","number","department","name","salary","style","backgroundColor","color","onClick","cursor","Animation","posed","div","visible","opacity","applyAtStart","display","hidden","applyAtEnd","AddUser","error","changeVisiblity","validateForm","changeInput","target","addUser","preventDefault","newUser","post","history","push","pose","onSubmit","htmlFor","placeholder","onChange","UpdateUser","match","params","updateUser","updatedUser","put","Users","key","NotFound","Contribute","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAIA,SAASA,EAAT,GAAyB,IAARC,EAAO,EAAPA,MAEb,OACI,yBAAKC,UAAY,6DACb,uBAAGC,KAAO,IAAID,UAAY,gBAAgBD,GAE1C,wBAAIC,UAAY,sBACZ,wBAAIA,UAAY,mBACZ,kBAAC,IAAD,CAAME,GAAK,IAAIF,UAAY,YAA3B,SAGJ,wBAAIA,UAAY,mBACZ,kBAAC,IAAD,CAAME,GAAK,OAAOF,UAAY,YAA9B,aAGJ,wBAAIA,UAAY,mBACZ,kBAAC,IAAD,CAAME,GAAK,UAAUF,UAAY,YAAjC,oBASpBF,EAAOK,aAAe,CAClBJ,MAAQ,eAEGD,Q,iEC7BTM,EAAcC,IAAMC,gBAEpBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,cACD,OAAO,eACAF,EADP,CAEIG,MAAQH,EAAMG,MAAMC,QAAO,SAAAC,GAAI,OAAIJ,EAAOK,UAAYD,EAAKE,QAGnE,IAAK,WACD,OAAO,eACAP,EADP,CAEIG,MAAK,sBAAOH,EAAMG,OAAb,CAAmBF,EAAOK,YAGvC,IAAK,cACD,OAAO,eACAN,EADP,CAEIG,MAAQH,EAAMG,MAAMK,KAAI,SAAAH,GAAI,OAAIA,EAAKE,KAAON,EAAOK,QAAQC,GAAKN,EAAOK,QAAUD,OAGzF,QACI,OAAOL,IAKNS,EAAb,2MACIT,MAAQ,CACJG,MAAQ,GACRO,SAAW,SAAAT,GACP,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAJlD,EAQIW,kBAAoB,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACOE,IAAMC,IAAI,gCADjB,OACVC,EADU,OAEhB,EAAKN,SAAS,CACVR,MAAQc,EAASC,OAHL,sCARxB,wEAgBQ,OACI,kBAACtB,EAAYuB,SAAb,CAAsBC,MAASC,KAAKrB,OAC/BqB,KAAKC,MAAMC,cAlB5B,GAAkCC,aA0BnBC,EAFM7B,EAAY8B,S,QC/C3BC,G,iBA+BF,WAAaL,GAAO,IAAD,8BACf,4CAAMA,KA9BXM,YAAc,SAACC,GACd,EAAKlB,SAAS,CACVmB,WAAY,EAAK9B,MAAM8B,aA2BR,EAXnBC,aAAe,SAAOrB,EAAUmB,GAAjB,eAAAhB,EAAAC,OAAA,uDACJP,EAAM,EAAKe,MAAXf,GADI,WAAAM,EAAA,MAILE,IAAMiB,OAAN,sCAA4CzB,KAJvC,OAOXG,EAAS,CAACR,KAAO,cAAeI,QAAQC,IAP7B,sCAcX,EAAKP,MAAQ,CACT8B,WAAW,GAIf,EAAKF,YAAc,EAAKA,YAAYK,KAAjB,gBARJ,E,yEAnBPJ,GACRK,QAAQC,IAAId,Q,mCAGHe,EAAOP,GAChBK,QAAQC,IAAIC,O,4DA8BZF,QAAQC,IAAI,0B,+BAGN,IAAD,SAE+Bd,KAAKC,MAAlCf,EAFF,EAEEA,GAAQ8B,GAFV,EAEKC,KAFL,EAEUD,YAAWE,EAFrB,EAEqBA,OACnBT,EAAaT,KAAKrB,MAAlB8B,UAEP,OACA,kBAAC,EAAD,MAEQ,SAAAV,GAAU,IACCV,EAAYU,EAAZV,SAEP,OACI,yBAAKlB,UAAY,iBACb,yBAAKA,UAAW,OAAOgD,MAASV,EAAY,CAACW,gBAAkB,UAAWC,MAAQ,QAAU,MACxF,yBAAKlD,UAAY,8CACb,wBAAIA,UAAY,YAAYmD,QAAW,EAAKf,aAAc,EAAKN,MAAMgB,MACrE,uBAAG9C,UAAY,kBAAkBgD,MAAS,CAACI,OAAO,WAAaD,QAAW,EAAKZ,aAAaE,KAAK,EAAMvB,MAIvGoB,EAEJ,yBAAKtC,UAAY,aACb,uBAAGA,UAAY,aAAf,eAAmC+C,GACnC,uBAAG/C,UAAY,aAAf,gBAAyC6C,GACzC,kBAAC,IAAD,CAAM3C,GAAE,eAAYa,GAAMf,UAAY,0BAAtC,iBACK,c,GA5EtBgC,cA8FnBG,EAAKhC,aAAe,CAChB2C,KAAO,wBACPC,OAAS,wBACTF,WAAa,yBAUFV,QC5GTkB,EAAYC,IAAMC,IAAI,CACxBC,QAAU,CACNC,QAAU,EACVC,aAAe,CACXC,QAAU,UAGlBC,OAAS,CACLH,QAAU,EACVI,WAAa,CACTF,QAAU,WAwJPG,E,2MAjJXtD,MAAQ,CACJgD,SAAU,EACVV,KAAO,GACPD,WAAa,GACbE,OAAS,GACTgB,OAAQ,G,EAGZC,gBAAkB,SAAC3B,GACf,EAAKlB,SAAS,CACVqC,SAAW,EAAKhD,MAAMgD,W,EAI9BS,aAAe,WAAO,IAAD,EACgB,EAAKzD,MAA/BsC,EADU,EACVA,KAAKC,EADK,EACLA,OAAOF,EADF,EACEA,WACnB,MAAa,KAATC,GAA0B,KAAXC,GAAgC,KAAfF,G,EAMxCqB,YAAc,SAAC7B,GACX,EAAKlB,SAAL,eACKkB,EAAE8B,OAAOrB,KAAQT,EAAE8B,OAAOvC,S,EAInCwC,QAAU,SAAOlD,EAAUmB,GAAjB,yBAAAhB,EAAAC,OAAA,mDACNe,EAAEgC,iBADI,EAE6B,EAAK7D,MAAjCsC,EAFD,EAECA,KAAMD,EAFP,EAEOA,WAAYE,EAFnB,EAEmBA,OAEnBuB,EAAU,CAEZxB,KAAOA,EACPC,OAASA,EACTF,WAAaA,GAGZ,EAAKoB,eAXJ,uBAYF,EAAK9C,SAAS,CACV4C,OAAQ,IAbV,4CAAA1C,EAAA,MAkBiBE,IAAMgD,KAAN,8BAA0CD,IAlB3D,OAkBA7C,EAlBA,OAuBNP,EAAS,CAACR,KAAO,WAAYI,QAAUW,EAASC,OAEhD,EAAKI,MAAM0C,QAAQC,KAAK,KAzBlB,uC,wEA4BA,IAAD,SAE8C5C,KAAKrB,MAAjDgD,EAFF,EAEEA,QAASV,EAFX,EAEWA,KAAMC,EAFjB,EAEiBA,OAAQF,EAFzB,EAEyBA,WAAYkB,EAFrC,EAEqCA,MAE1C,OAAO,kBAAC,EAAD,MAEC,SAAAnC,GAAU,IAECV,EAAYU,EAAZV,SAEP,OACI,yBAAKlB,UAAY,iBAEb,4BAAQmD,QAAW,EAAKa,gBAAiBhE,UAAY,+BAA+BwD,EAAU,YAAc,aAE5G,kBAACH,EAAD,CAAWqB,KAAQlB,EAAU,UAAY,UAEzC,yBAAKxD,UAAY,QACb,yBAAKA,UAAY,eACb,8CAGJ,yBAAKA,UAAY,aAET+D,EACA,yBAAK/D,UAAY,sBAAjB,6EAGC,KAEL,0BAAM2E,SAAY,EAAKP,QAAQ3B,KAAK,EAAMvB,IACtC,yBAAKlB,UAAY,cACb,2BAAO4E,QAAU,QAAjB,QACA,2BACAlE,KAAO,OACPoC,KAAO,OACP/B,GAAK,KACL8D,YAAc,aACd7E,UAAY,eACZ4B,MAASkB,EACTgC,SAAY,EAAKZ,eAIrB,yBAAKlE,UAAY,cACb,2BAAO4E,QAAU,cAAjB,cACA,2BACAlE,KAAO,OACPoC,KAAO,aACP/B,GAAK,aACL8D,YAAc,mBACd7E,UAAY,eACZ4B,MAASiB,EACTiC,SAAY,EAAKZ,eAKrB,yBAAKlE,UAAY,cACb,2BAAO4E,QAAU,UAAjB,UACA,2BACAlE,KAAO,OACPoC,KAAO,SACP/B,GAAK,KACL8D,YAAc,eACd7E,UAAY,eACZ4B,MAASmB,EACT+B,SAAY,EAAKZ,eAKrB,4BAAQlE,UAAY,gCAAgCU,KAAO,UAA3D,mB,GAlIlBsB,aC2IP+C,E,2MAzJXvE,MAAQ,CACJsC,KAAO,GACPD,WAAa,GACbE,OAAS,GACTgB,OAAQ,G,EAGZG,YAAc,SAAC7B,GACX,EAAKlB,SAAL,eACKkB,EAAE8B,OAAOrB,KAAQT,EAAE8B,OAAOvC,S,EAInCR,kBAAoB,oCAAAC,EAAAC,OAAA,uDACTP,EAAM,EAAKe,MAAMkD,MAAMC,OAAvBlE,GADS,WAAAM,EAAA,MAGOE,IAAMC,IAAN,sCAAyCT,KAHhD,OAGVU,EAHU,SAKiBA,EAASC,KAAnCoB,EALS,EAKTA,KAAKC,EALI,EAKJA,OAAOF,EALH,EAKGA,WAEnB,EAAK1B,SAAS,CACV2B,OACAC,SACAF,eAVY,sC,EAcpBoB,aAAe,WAAO,IAAD,EACgB,EAAKzD,MAA/BsC,EADU,EACVA,KAAKC,EADK,EACLA,OAAOF,EADF,EACEA,WACnB,MAAa,KAATC,GAA0B,KAAXC,GAAgC,KAAfF,G,EAMxCqC,WAAa,SAAOhE,EAAUmB,GAAjB,2BAAAhB,EAAAC,OAAA,mDACTe,EAAEgC,iBADO,EAIwB,EAAK7D,MAA/BsC,EAJE,EAIFA,KAAKC,EAJH,EAIGA,OAAOF,EAJV,EAIUA,WACZ9B,EAAM,EAAKe,MAAMkD,MAAMC,OAAvBlE,GAEDoE,EAAc,CAChBrC,OACAC,SACAF,cAIC,EAAKoB,eAdD,uBAeL,EAAK9C,SAAS,CACV4C,OAAQ,IAhBP,4CAAA1C,EAAA,MAqBcE,IAAM6D,IAAN,sCAAyCrE,GAAMoE,IArB7D,OAqBH1D,EArBG,OAuBTP,EAAS,CAACR,KAAO,cAAeI,QAAUW,EAASC,OAKnD,EAAKI,MAAM0C,QAAQC,KAAK,KA5Bf,uC,wEA+BH,IAAD,SAEoC5C,KAAKrB,MAAvCsC,EAFF,EAEEA,KAAMC,EAFR,EAEQA,OAAQF,EAFhB,EAEgBA,WAAWkB,EAF3B,EAE2BA,MAEhC,OAAO,kBAAC,EAAD,MAEC,SAAAnC,GAAU,IAECV,EAAYU,EAAZV,SAEP,OACI,yBAAKlB,UAAY,iBAIb,yBAAKA,UAAY,QACb,yBAAKA,UAAY,eACb,iDAGJ,yBAAKA,UAAY,aAET+D,EACA,yBAAK/D,UAAY,sBAAjB,6EAGC,KAEL,0BAAM2E,SAAY,EAAKO,WAAWzC,KAAK,EAAMvB,IACzC,yBAAKlB,UAAY,cACb,2BAAO4E,QAAU,QAAjB,QACA,2BACAlE,KAAO,OACPoC,KAAO,OACP/B,GAAK,KACL8D,YAAc,aACd7E,UAAY,eACZ4B,MAASkB,EACTgC,SAAY,EAAKZ,eAIrB,yBAAKlE,UAAY,cACb,2BAAO4E,QAAU,cAAjB,cACA,2BACAlE,KAAO,OACPoC,KAAO,aACP/B,GAAK,aACL8D,YAAc,mBACd7E,UAAY,eACZ4B,MAASiB,EACTiC,SAAY,EAAKZ,eAKrB,yBAAKlE,UAAY,cACb,2BAAO4E,QAAU,UAAjB,UACA,2BACAlE,KAAO,OACPoC,KAAO,SACP/B,GAAK,KACL8D,YAAc,eACd7E,UAAY,eACZ4B,MAASmB,EACT+B,SAAY,EAAKZ,eAKrB,4BAAQlE,UAAY,gCAAgCU,KAAO,UAA3D,kB,GA1IfsB,aCkCVqD,E,iLAhCP,OACI,kBAAC,EAAD,MAEQ,SAAAzD,GAAU,IACCjB,EAASiB,EAATjB,MAEP,OACI,6BAEQA,EAAMK,KAAI,SAAAH,GACN,OACI,kBAAC,EAAD,CAEIyE,IAAOzE,EAAKE,GACZA,GAAMF,EAAKE,GACX+B,KAAQjC,EAAKiC,KACbC,OAAUlC,EAAKkC,OACfF,WAAchC,EAAKgC,wB,GApB/Cb,a,gBCKLuD,MARf,WACI,OACI,+CCQOC,MAVf,WACI,OACI,6BACI,uEACA,iEAAsC,uBAAGrB,OAAS,SAASlE,KAAO,+BAA5B,QAAtC,mBCwCGwF,E,iLA7BT,OACE,kBAAC,IAAD,KACE,yBAAKzF,UAAU,aAEf,kBAAC,EAAD,CAAQD,MAAQ,eAChB,6BAEA,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAO,IAAIC,UAAaP,IACrC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAO,OAAOC,UAAa9B,IACxC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAO,UAAUC,UAAaJ,IAC3C,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAO,YAAYC,UAAab,IAC7C,kBAAC,IAAD,CAAOa,UAAaL,W,GAjBZvD,aCDE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCXNiB,IAASC,OACL,kBAAC,EAAD,KACI,kBAAC,EAAD,OAIJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.db0d971d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from  \"react-router-dom\";\n\nfunction Navbar({title}){\n\n    return (\n        <nav className = \" navbar-nav navbar-expand-lg navbar-dark bg-dark mb-3 p-3\">\n            <a href = \"/\" className = \"navbar-brand\">{title}</a>\n\n            <ul className = \"navbar-nav ml-auto\">\n                <li className = \"nav-item active\">\n                    <Link to = \"/\" className = \"nav-link\">Home</Link>\n                </li>\n\n                <li className = \"nav-item active\">\n                    <Link to = \"/add\" className = \"nav-link\">Add User</Link>\n                </li>\n\n                <li className = \"nav-item active\">\n                    <Link to = \"/github\" className = \"nav-link\">Project Files</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\nNavbar.propTypes = {\n    title : PropTypes.string.isRequired\n}\nNavbar.defaultProps = {\n    title : \"Default App\"\n}\nexport default Navbar;","import React, { Component } from 'react'\nimport axios from \"axios\";\n\nconst UserContext = React.createContext();\n//Provider ,Consumer\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"DELETE_USER\" :\n            return {\n                ...state,\n                users : state.users.filter(user => action.payload !== user.id)\n            }\n\n        case \"ADD_USER\":\n            return {\n                ...state,\n                users : [...state.users,action.payload]\n            }\n\n        case \"UPDATE_USER\":\n            return {\n                ...state,\n                users : state.users.map(user => user.id === action.payload.id ? action.payload : user)\n            }\n\n        default :\n            return state\n            \n    }\n}\n\nexport class UserProvider extends Component {\n    state = {\n        users : [],\n        dispatch : action => {\n            this.setState(state => reducer(state, action))\n        }\n      }\n\n    componentDidMount = async () => {\n        const response = await axios.get(\"http://localhost:3004/users\")\n        this.setState({\n            users : response.data\n        })\n    }\n\n    render() {\n        return (\n            <UserContext.Provider value = {this.state}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\nconst UserConsumer = UserContext.Consumer;\n\nexport default UserConsumer;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport UserConsumer from \"../context\";\nimport { color } from 'style-value-types';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\"\n\n\nclass User extends Component {\n    \n   onClickEvet = (e) =>{\n    this.setState({\n        isVisible :!this.state.isVisible\n\n    })\n}\n\n\n    \n\n    onClickEvet(e){\n        console.log(this);\n    }\n\n    onClickEvet2(number,e){\n        console.log(number);\n    }\n\n    onDeleteUser = async (dispatch ,e) => {\n        const {id} = this.props;\n\n        // Delete Request\n        await axios.delete(`http://localhost:3004/users/${id}`);\n\n        //Consumer Dispatch\n        dispatch({type : \"DELETE_USER\", payload:id});\n\n    }\n\n    constructor (props){\n        super(props);\n\n        this.state = {\n            isVisible :false\n        }\n\n        //bind etmek için kullandığımız costructor\n        this.onClickEvet = this.onClickEvet.bind(this);\n\n\n    }\n\n    // sayfada kaldırma/silme işlemlerinden hemen önce\n\n    componentWillUnmount(){\n        console.log(\"componentWillUnmount\");\n    }\n\n    render() {\n\n        const {id,name,department,salary} = this.props;\n        const {isVisible} = this.state;\n\n        return (\n        <UserConsumer>\n            {\n                value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className = \"col-md-8 mb-4\">\n                            <div className =\"card\" style = {isVisible ? {backgroundColor : \"#dd4c4f\", color : \"#fff\"} : null}>\n                                <div className = \"card-header d-flex justify-content-between\">\n                                    <h4 className = \"d-inline \" onClick = {this.onClickEvet}>{this.props.name}</h4>\n                                    <i className = \"fa fa-trash-alt\" style = {{cursor:\"pointer\"}}  onClick = {this.onDeleteUser.bind(this, dispatch)}></i>\n                                </div>\n            \n                                {\n                                    isVisible ? \n            \n                                <div className = \"card-body\">\n                                    <p className = \"card-text\">Maaş : {salary}</p> \n                                    <p className = \"card-text\">Department : {department}</p> \n                                    <Link to = {`edit/${id}`} className = \"btn btn-dark btn-block\"> Update User</Link>\n                                </div> : null\n            \n                                }\n                            </div>\n                        </div>\n                    )\n                }\n            }\n\n        </UserConsumer>\n        )\n        /*\n        \n\n        */\n    }\n}\n\nUser.defaultProps = {\n    name : \"İsim bilgisi yok\",\n    salary : \"Maaş bilgisi yok\",\n    department : \"Departman bilgisi yok\"\n}\n\nUser.propTypes = {\n    name : PropTypes.string.isRequired,\n    salary : PropTypes.string.isRequired,\n    department : PropTypes.string.isRequired,\n    id : PropTypes.string.isRequired\n\n}\nexport default User;","import React, { Component } from 'react'\nimport posed from 'react-pose';\nimport UserConsumer from \"../context\";\nimport User from '../components/User';\nimport axios from \"axios\";\n\n\nconst Animation = posed.div({\n    visible : {\n        opacity : 1,\n        applyAtStart : {\n            display : \"block\"\n        }\n    },\n    hidden : {\n        opacity : 0,\n        applyAtEnd : {\n            display : \"none\"\n        }\n    }\n});\n\nclass AddUser extends Component {\n\n    state = {\n        visible : false,\n        name : \"\",\n        department : \"\",\n        salary : \"\",\n        error : false\n    }\n\n    changeVisiblity = (e) => {\n        this.setState({\n            visible : !this.state.visible\n        })\n    }\n\n    validateForm = () => {\n        const {name,salary,department} = this.state;\n        if (name === \"\" || salary === \"\" || department === \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    changeInput = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    addUser = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, department, salary} = this.state;\n\n        const newUser = {\n            \n            name : name,\n            salary : salary,\n            department : department\n        }\n\n        if (!this.validateForm()){\n            this.setState({\n                error : true\n            })\n            return;\n        }\n\n        const response = await axios.post(`http://localhost:3004/users`, newUser);\n\n\n\n\n        dispatch({type : \"ADD_USER\", payload : response.data});\n\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n\n        const {visible, name, salary, department, error} = this.state;\n\n        return <UserConsumer>\n            {\n                value => {\n\n                    const {dispatch} = value;\n\n                    return (\n                        <div className = \"col-md-8 mb-4\">\n            \n                            <button onClick = {this.changeVisiblity} className = \"btn btn-dark btn-block bm-1\">{visible ? \"Hide Form\" : \"Show Form\"}</button>\n            \n                            <Animation pose = {visible ? \"visible\" : \"hidden\"}>\n            \n                            <div className = \"card\">\n                                <div className = \"card-header\">\n                                    <h4>Add User Form</h4>\n                                </div>\n            \n                                <div className = \"card-body\">\n                                    {\n                                        error ?\n                                        <div className = \"alert alert-danger\">\n                                            Eksik giriş yaptınız, lütfen bilgilerinizi kontrol edin\n                                        </div>\n                                        :null\n                                    }\n                                    <form onSubmit = {this.addUser.bind(this, dispatch)}>\n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"name\">Name</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"name\"\n                                            id = \"id\"\n                                            placeholder = \"Enter name\"\n                                            className = \"form-control\"\n                                            value = {name}\n                                            onChange = {this.changeInput}\n                                            />\n                                        </div>\n            \n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"department\">Department</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"department\"\n                                            id = \"department\"\n                                            placeholder = \"Enter department\"\n                                            className = \"form-control\"\n                                            value = {department}\n                                            onChange = {this.changeInput}\n                                            \n                                            />\n                                        </div>\n            \n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"salary\">Salary</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"salary\"\n                                            id = \"id\"\n                                            placeholder = \"Enter salary\"\n                                            className = \"form-control\"\n                                            value = {salary}\n                                            onChange = {this.changeInput}\n                                            \n                                            />\n                                        </div>\n            \n                                        <button className = \"btn btn-danger btn-block mt-3\" type = \"submit\">Add</button>\n                                    </form>\n                                </div>\n                            </div>\n                            </Animation>\n                        </div>\n                    )\n\n                }\n            }\n        </UserConsumer>\n\n\n\n        \n    }\n}\nexport default AddUser;","import React, { Component } from 'react'\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\n\n\nclass UpdateUser extends Component {\n\n    state = {\n        name : \"\",\n        department : \"\",\n        salary : \"\",\n        error : false\n    }\n\n    changeInput = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    componentDidMount = async () => {\n        const {id} = this.props.match.params;\n\n        const response = await axios.get(`http://localhost:3004/users/${id}`);\n\n        const {name,salary,department} = response.data;\n\n        this.setState({\n            name,\n            salary,\n            department\n        });\n    }\n    \n    validateForm = () => {\n        const {name,salary,department} = this.state;\n        if (name === \"\" || salary === \"\" || department === \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    updateUser = async (dispatch, e) => {\n        e.preventDefault();\n        // update user\n\n        const {name,salary,department} = this.state;\n        const {id} = this.props.match.params;\n\n        const updatedUser = {\n            name,\n            salary,\n            department\n        };\n\n\n        if (!this.validateForm()){\n            this.setState({\n                error : true\n            })\n            return;\n        }\n\n        const response = await axios.put(`http://localhost:3004/users/${id}`, updatedUser);\n\n        dispatch({type : \"UPDATE_USER\", payload : response.data});\n\n\n\n\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n\n        const {name, salary, department,error} = this.state;\n\n        return <UserConsumer>\n            {\n                value => {\n\n                    const {dispatch} = value;\n\n                    return (\n                        <div className = \"col-md-8 mb-4\">\n                        \n                            \n            \n                            <div className = \"card\">\n                                <div className = \"card-header\">\n                                    <h4>Update User Form</h4>\n                                </div>\n            \n                                <div className = \"card-body\">\n                                {\n                                        error ?\n                                        <div className = \"alert alert-danger\">\n                                            Eksik giriş yaptınız, lütfen bilgilerinizi kontrol edin\n                                        </div>\n                                        :null\n                                    }\n                                    <form onSubmit = {this.updateUser.bind(this, dispatch)}>\n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"name\">Name</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"name\"\n                                            id = \"id\"\n                                            placeholder = \"Enter name\"\n                                            className = \"form-control\"\n                                            value = {name}\n                                            onChange = {this.changeInput}\n                                            />\n                                        </div>\n            \n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"department\">Department</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"department\"\n                                            id = \"department\"\n                                            placeholder = \"Enter department\"\n                                            className = \"form-control\"\n                                            value = {department}\n                                            onChange = {this.changeInput}\n                                            \n                                            />\n                                        </div>\n            \n                                        <div className = \"from-group\">\n                                            <label htmlFor = \"salary\">Salary</label>\n                                            <input\n                                            type = \"text\"\n                                            name = \"salary\"\n                                            id = \"id\"\n                                            placeholder = \"Enter salary\"\n                                            className = \"form-control\"\n                                            value = {salary}\n                                            onChange = {this.changeInput}\n                                            \n                                            />\n                                        </div>\n            \n                                        <button className = \"btn btn-danger btn-block mt-3\" type = \"submit\">Add</button>\n                                    </form>\n                                </div>\n                            </div>\n                           \n                        </div>\n                    )\n\n                }\n            }\n        </UserConsumer>\n\n\n\n        \n    }\n}\nexport default UpdateUser;","import React, { Component } from 'react'\nimport User from \"./User\";\nimport UserConsumer from \"../context\";\n\n\nclass Users extends Component {\n    render() {\n\n        return(\n            <UserConsumer>\n                {\n                    value => {\n                        const {users} = value;\n\n                        return (\n                            <div>\n                                {\n                                    users.map(user => {\n                                        return (\n                                            <User\n                \n                                                key = {user.id}\n                                                id = {user.id}\n                                                name = {user.name}\n                                                salary = {user.salary}\n                                                department = {user.department}\n                                            />\n                                        )\n                                    })\n                                }\n                            </div>\n                        )\n                    }\n                }\n            </UserConsumer>\n        )\n\n    }\n}\n\nexport default Users;\n","import React from 'react'\n\nfunction NotFound() {\n    return (\n        <div>\n            404 Not Found\n        </div>\n    )\n}\n\nexport default NotFound;\n","import React from 'react'\n\nfunction Contribute() {\n    return (\n        <div>\n            <h3>Project Files and Contribute to Project</h3>\n            <p>you can download full project from <a target = \"_blank\" href = \"https://github.com/uguryuce\">this</a>  github page\n            </p>\n            \n        </div>\n    )\n}\nexport default Contribute;","import React, { Component } from 'react';\nimport Navbar from \"./layout/Navbar\";\nimport AddUser from \"./forms/AddUser\";\nimport UpdateUser from \"./forms/UpdateUser\";\n\nimport Users from \"./components/Users\";\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from  \"react-router-dom\";\nimport NotFound from \"./pages/NotFound\";\nimport Contribute from './pages/Contribute';\n\n\n\nclass App extends Component {\n      \n    render() {\n      \n      return (\n        <Router>\n          <div className=\"container\">\n\n          <Navbar title = \"User App 2\" />\n          <hr/>\n\n          <Switch>\n\n          <Route exact path = \"/\" component = {Users} />\n          <Route exact path = \"/add\" component = {AddUser} />\n          <Route exact path = \"/github\" component = {Contribute} />\n          <Route exact path = \"/edit/:id\" component = {UpdateUser} />\n          <Route component = {NotFound} />\n\n\n          </Switch>\n\n\n\n\n\n\n          </div>\n        </Router>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {UserProvider} from \"./context\";\n\nReactDOM.render(\n    <UserProvider>\n        <App/>\n    </UserProvider>\n    ,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}